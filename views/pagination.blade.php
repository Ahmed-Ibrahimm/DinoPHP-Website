<!DOCTYPE html>
<html lang="en">

<head>
    <title>Pagination - DinoPHP Framework</title>
    <style>

        .menu-link {
            font-weight: bold;
        }
        ul {
            list-style: none;
        }
        .menu-docs {
            line-height: 2em;
        }

    </style>
    @include('links')
</head>

<body>
@include('navbar')

<div class="container">
    <div class="row">
        <div class="col-lg-3">
            @include('docs-menu')
        </div>
        <div class="col-lg">
            <a href="#pagination"><h3 style="font-weight: bold"><span class="hashtag">#</span> Pagination</h3></a>
            <div id="pagination" style="margin-top: 5%;">

                <a href="#introduction"><h4 style="font-weight: bold"><span class="hashtag">#</span> Introduction</h4></a>
                <p style="font-size: 1rem;line-height: 1.8rem;color:#2b2e38">
                    In other frameworks, pagination can be very painful. We hope DinoPHP's approach to pagination will be a breath of fresh air. DinoPHP's paginator is integrated with the query builder and provides convenient, easy-to-use pagination of database records with zero configuration.
                </p>

                <a href="#pagination"><h3 style="font-weight: bold"><span class="hashtag">#</span> Usage</h3></a>
                <a href="#pagination"><h4 style="font-weight: bold"><span class="hashtag">#</span> Paginating Query Results</h4></a>
                <p style="font-size: 1rem;line-height: 1.8rem;color:#2b2e38">
                    There are several ways to paginate items. The simplest is by using the <b>paginate</b> method on the query builder. The paginate method automatically takes care of setting the query's <b>"limit"</b> and <b>"offset"</b> based on the current page being viewed by the user. By default, the current page is detected by the value of the page query string argument on the HTTP request. This value is automatically detected by Dinophp, and is also automatically inserted into links generated by the paginator.
                </p>
                <p style="font-size: 1rem;line-height: 1.8rem;color:#2b2e38">
                    In this example, the only argument passed to the <b>paginate</b> method is the number of items you would like displayed "per page". In this case, let's specify that we would like to display <b>15 items per page</b>:
                </p>

                <div class="code">
					<?php
					highlight_string('
<?php
return view("user.index", [
"users" => Database::table("users")->paginate(15);
]
?>
                        ');


					?>
                </div>

                <a href="#pagination"><h4 style="font-weight: bold"><span class="hashtag">#</span> Paginate</h4></a>
                <p style="font-size: 1rem;line-height: 1.8rem;color:#2b2e38">
                    The <b>paginate</b> method counts the total number of records matched by the query before retrieving the records from the database. This is done so that the paginator knows how many pages of records there are in total. However, if you do not plan to show the total number of pages in your application's UI then the record count query is unnecessary.
                </p>

                <div class="code">
					<?php
					highlight_string('
<?php
$users = Database::table("users")->paginate(15);

return View::render("admin.dashboard", ["users" => $users]);
?>
                        ');
					?>
                </div>

            </div>
        </div>
    </div>
</div>
</div>

@include('footer')
</body>
@include('scripts')

</html>